/*!
 *
 *   typeit - The most versatile animated typing utility on the planet.
 *   Author: Alex MacArthur <alex@macarthur.me> (https://macarthur.me)
 *   Version: v6.0.0
 *   URL: https://typeitjs.com
 *   License: GPL-2.0
 *
 */
!(function(t, e) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = e())
    : "function" == typeof define && define.amd
    ? define([], e)
    : "object" == typeof exports
    ? (exports.TypeIt = e())
    : (t.TypeIt = e());
})(window, function() {
  return (function(t) {
    var e = {};
    function n(i) {
      if (e[i]) return e[i].exports;
      var r = (e[i] = { i: i, l: !1, exports: {} });
      return t[i].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
    }
    return (
      (n.m = t),
      (n.c = e),
      (n.d = function(t, e, i) {
        n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i });
      }),
      (n.r = function(t) {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(t, "__esModule", { value: !0 });
      }),
      (n.t = function(t, e) {
        if ((1 & e && (t = n(t)), 8 & e)) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var i = Object.create(null);
        if (
          (n.r(i),
          Object.defineProperty(i, "default", { enumerable: !0, value: t }),
          2 & e && "string" != typeof t)
        )
          for (var r in t)
            n.d(
              i,
              r,
              function(e) {
                return t[e];
              }.bind(null, r)
            );
        return i;
      }),
      (n.n = function(t) {
        var e =
          t && t.__esModule
            ? function() {
                return t.default;
              }
            : function() {
                return t;
              };
        return n.d(e, "a", e), e;
      }),
      (n.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }),
      (n.p = ""),
      n((n.s = 0))
    );
  })([
    function(t, e, n) {
      "use strict";
      n.r(e);
      var i = {
        strings: [],
        queue: null,
        speed: 100,
        cursor: !0,
        cursorChar: "|",
        cursorSpeed: 1e3,
        deleteSpeed: null,
        lifeLike: !0,
        breakLines: !0,
        startDelay: 250,
        startDelete: !1,
        nextStringDelay: 750,
        loop: !1,
        loopDelay: null,
        html: !0,
        waitUntilVisible: !1,
        callback: !1,
        beforeString: !1,
        afterString: !1,
        beforeStep: !1,
        afterStep: !1,
        afterComplete: !1
      };
      function r(t) {
        var e = t.getBoundingClientRect();
        return (
          !(e.right > window.innerWidth || e.bottom > window.innerHeight) &&
          !(e.top < 0 || e.left < 0)
        );
      }
      function o(t, e) {
        return Math.abs(Math.random() * (t + e - (t - e)) + (t - e));
      }
      function s(t) {
        var e =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
          n = document.createElement("style");
        (n.id = e),
          n.appendChild(document.createTextNode(t)),
          document.head.appendChild(n);
      }
      var a = function(t, e) {
          for (var n in e) t[n] = e[n];
          return t;
        },
        u = function(t) {
          return ["textarea", "input"].indexOf(t.tagName.toLowerCase()) > -1;
        },
        l = function(t) {
          return Array.isArray(t) ? t.slice(0) : t.split("<br>");
        },
        c = function(t) {
          var e = t.tag,
            n = t.attributes,
            i = void 0 === n ? [] : n,
            r = t.content,
            o = void 0 === r ? "" : r,
            s = document.createElement(e);
          return (
            void 0 !== i &&
              i.forEach(function(t) {
                s.setAttribute(t.name, t.value);
              }),
            (s.innerHTML = o),
            s.outerHTML
          );
        },
        f = function(t) {
          [].slice.call(t.childNodes).forEach(function(e) {
            void 0 !== e.classList &&
              e.classList.contains("ti-wrapper") &&
              (t.innerHTML = "");
          });
        };
      function p(t) {
        return (
          (function(t) {
            if (Array.isArray(t)) {
              for (var e = 0, n = new Array(t.length); e < t.length; e++)
                n[e] = t[e];
              return n;
            }
          })(t) ||
          (function(t) {
            if (
              Symbol.iterator in Object(t) ||
              "[object Arguments]" === Object.prototype.toString.call(t)
            )
              return Array.from(t);
          })(t) ||
          (function() {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance"
            );
          })()
        );
      }
      function h(t, e) {
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, i.key, i);
        }
      }
      var d = (function() {
        function t() {
          var e,
            n,
            i,
            r =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [];
          !(function(t, e) {
            if (!(t instanceof e))
              throw new TypeError("Cannot call a class as a function");
          })(this, t),
            (i = []),
            (n = "executed") in (e = this)
              ? Object.defineProperty(e, n, {
                  value: i,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                })
              : (e[n] = i),
            (this.waiting = r);
        }
        var e, n, i;
        return (
          (e = t),
          (n = [
            {
              key: "add",
              value: function(t) {
                this.waiting.push(t);
              }
            },
            {
              key: "reset",
              value: function() {
                (this.waiting = p(this.executed).concat(p(this.waiting))),
                  (this.executed = []);
              }
            }
          ]) && h(e.prototype, n),
          i && h(e, i),
          t
        );
      })();
      function y(t) {
        return (y =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function(t) {
                return typeof t;
              }
            : function(t) {
                return t &&
                  "function" == typeof Symbol &&
                  t.constructor === Symbol &&
                  t !== Symbol.prototype
                  ? "symbol"
                  : typeof t;
              })(t);
      }
      function v(t) {
        return (
          (function(t) {
            if (Array.isArray(t)) {
              for (var e = 0, n = new Array(t.length); e < t.length; e++)
                n[e] = t[e];
              return n;
            }
          })(t) ||
          (function(t) {
            if (
              Symbol.iterator in Object(t) ||
              "[object Arguments]" === Object.prototype.toString.call(t)
            )
              return Array.from(t);
          })(t) ||
          (function() {
            throw new TypeError(
              "Invalid attempt to spread non-iterable instance"
            );
          })()
        );
      }
      function g(t, e, n, i, r, o, s) {
        try {
          var a = t[o](s),
            u = a.value;
        } catch (t) {
          return void n(t);
        }
        a.done ? e(u) : Promise.resolve(u).then(i, r);
      }
      function b(t, e) {
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, i.key, i);
        }
      }
      function m(t, e, n) {
        return (
          e in t
            ? Object.defineProperty(t, e, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
              })
            : (t[e] = n),
          t
        );
      }
      var w =
          "display:inline;position:relative;font:inherit;color:inherit;line-height:inherit;",
        k = (function() {
          function t() {
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {},
              n = e.element,
              r = e.id,
              o = e.options,
              s = e.typeit,
              c = void 0 === s ? null : s,
              p = e.queue,
              h = void 0 === p ? [] : p;
            !(function(t, e) {
              if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function");
            })(this, t),
              m(this, "status", {
                started: !1,
                complete: !1,
                frozen: !1,
                destroyed: !1
              }),
              m(this, "timeouts", []),
              (this.id = r),
              (this.typeit = c),
              (this.$e = n),
              (this.isInput = u(n)),
              (this.queue = new d(h)),
              (this.opts = a(i, o)),
              (this.opts.strings = l(this.opts.strings).map(function(t) {
                return t.replace(/<\!--.*?-->/g, "");
              })),
              (this.opts.html = !this.isInput && this.opts.html),
              this.queue.add([this.pause, this.opts.startDelay]),
              f(n),
              this.prepareDelay("nextStringDelay"),
              this.prepareDelay("loopDelay");
            var y = this.$e.innerHTML;
            this.prepDOM(),
              this.handleHardCoded(y),
              this.opts.strings.length && this.generateQueue();
          }
          var e, n, p, h, k;
          return (
            (e = t),
            (n = [
              {
                key: "init",
                value: function() {
                  var t = this;
                  if (!this.status.started) {
                    if (
                      (this.cursor(), !this.opts.waitUntilVisible || r(this.$e))
                    )
                      return (this.status.started = !0), this.fire();
                    window.addEventListener("scroll", function e() {
                      r(t.$e) &&
                        !t.status.started &&
                        (t.fire(), window.removeEventListener("scroll", e));
                    });
                  }
                }
              },
              {
                key: "fire",
                value: ((h = regeneratorRuntime.mark(function t() {
                  var e,
                    n,
                    i,
                    r,
                    o,
                    s,
                    a,
                    u,
                    l,
                    c = this;
                  return regeneratorRuntime.wrap(
                    function(t) {
                      for (;;)
                        switch ((t.prev = t.next)) {
                          case 0:
                            for (
                              e = this.queue.waiting.slice(),
                                n = Promise.resolve(),
                                i = !0,
                                r = !1,
                                o = void 0,
                                t.prev = 5,
                                s = function() {
                                  var t = u.value,
                                    e = [t, c.queue, c.typeit];
                                  n = n
                                    .then(function() {
                                      return new Promise(function(n, i) {
                                        if (c.status.frozen) return i();
                                        var r, o;
                                        (c.setPace(),
                                        t[2] &&
                                          t[2].isFirst &&
                                          c.opts.beforeString) &&
                                          (r = c.opts).beforeString.apply(r, e);
                                        c.opts.beforeStep &&
                                          (o = c.opts).beforeStep.apply(o, e);
                                        t[0]
                                          .call(c, t[1], t[2])
                                          .then(function() {
                                            var i, r;
                                            t[2] &&
                                              t[2].isLast &&
                                              c.opts.afterString &&
                                              (i = c.opts).afterString.apply(
                                                i,
                                                e
                                              );
                                            c.opts.afterStep &&
                                              (r = c.opts).afterStep.apply(
                                                r,
                                                e
                                              );
                                            c.queue.executed.push(
                                              c.queue.waiting.shift()
                                            ),
                                              n();
                                          });
                                      });
                                    })
                                    .catch(function() {});
                                },
                                a = e[Symbol.iterator]();
                              !(i = (u = a.next()).done);
                              i = !0
                            )
                              s();
                            t.next = 14;
                            break;
                          case 10:
                            (t.prev = 10),
                              (t.t0 = t.catch(5)),
                              (r = !0),
                              (o = t.t0);
                          case 14:
                            (t.prev = 14),
                              (t.prev = 15),
                              i || null == a.return || a.return();
                          case 17:
                            if (((t.prev = 17), !r)) {
                              t.next = 20;
                              break;
                            }
                            throw o;
                          case 20:
                            return t.finish(17);
                          case 21:
                            return t.finish(14);
                          case 22:
                            return (
                              this.opts.loop &&
                                ((l = this.opts.loopDelay
                                  ? this.opts.loopDelay
                                  : this.opts.nextStringDelay),
                                this.wait(function() {
                                  (c.queue = []),
                                    c.queueDeletions(c.contents()),
                                    c.generateQueue([c.pause, l.before]),
                                    c.fire();
                                }, l.after)),
                              (this.status.completed = !0),
                              this.opts.afterComplete &&
                                this.opts.afterComplete(this.typeit),
                              t.abrupt("return")
                            );
                          case 26:
                          case "end":
                            return t.stop();
                        }
                    },
                    t,
                    this,
                    [[5, 10, 14, 22], [15, , 17, 21]]
                  );
                })),
                (k = function() {
                  var t = this,
                    e = arguments;
                  return new Promise(function(n, i) {
                    var r = h.apply(t, e);
                    function o(t) {
                      g(r, n, i, o, s, "next", t);
                    }
                    function s(t) {
                      g(r, n, i, o, s, "throw", t);
                    }
                    o(void 0);
                  });
                }),
                function() {
                  return k.apply(this, arguments);
                })
              },
              {
                key: "setOptions",
                value: function(t) {
                  this.opts = a(this.opts, t);
                }
              },
              {
                key: "prepDOM",
                value: function() {
                  this.isInput ||
                    ((this.$e.innerHTML = '\n      <span style="'
                      .concat(w, '" class="ti-wrapper">\n        <span style="')
                      .concat(
                        w,
                        '" class="ti-container"></span>\n      </span>\n      '
                      )),
                    this.$e.setAttribute("data-typeit-id", this.id),
                    (this.$eContainer = this.$e.querySelector(".ti-container")),
                    (this.$eWrapper = this.$e.querySelector(".ti-wrapper")),
                    s(
                      "\n        .".concat(
                        this.$eContainer.className,
                        ":before {\n          content: '.';\n          display: inline-block;\n          width: 0;\n          visibility: hidden;\n        }\n      "
                      )
                    ));
                }
              },
              {
                key: "reset",
                value: function() {
                  return (
                    this.queue.reset(),
                    new t({
                      element: this.$e,
                      id: this.id,
                      options: this.opts,
                      typeit: this.typeit,
                      queue: this.queue.waiting
                    })
                  );
                }
              },
              {
                key: "contents",
                value: function() {
                  var t =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  return null === t
                    ? this.isInput
                      ? this.$e.value
                      : this.opts.html
                      ? this.$eContainer.innerHTML
                      : this.$eContainer.innerText
                    : (this.isInput
                        ? (this.$e.value = t)
                        : (this.$eContainer[
                            this.opts.html ? "innerHTML" : "innerText"
                          ] = t),
                      !0);
                }
              },
              {
                key: "prepareDelay",
                value: function(t) {
                  var e = this.opts[t];
                  if (e) {
                    var n = Array.isArray(e),
                      i = n ? null : e / 2;
                    this.opts[t] = {
                      before: n ? e[0] : i,
                      after: n ? e[1] : i,
                      total: n ? e[0] + e[1] : e
                    };
                  }
                }
              },
              {
                key: "generateQueue",
                value: function() {
                  var t = this,
                    e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : null;
                  e && this.queue.add(e),
                    this.opts.strings.forEach(function(e, n) {
                      t.queueString(e);
                      var i = t.queue.waiting.length;
                      if (n + 1 !== t.opts.strings.length) {
                        if (t.opts.breakLines)
                          return (
                            t.queue.add([t.insert, "<br>"]),
                            void t.addSplitPause(i)
                          );
                        t.queueDeletions(e), t.addSplitPause(i, e.length);
                      }
                    });
                }
              },
              {
                key: "queueDeletions",
                value: function() {
                  for (
                    var t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : null,
                      e =
                        "string" == typeof t ? this.maybeNoderize(t).length : t,
                      n = 0;
                    n < e;
                    n++
                  )
                    this.queue.add([this.delete]);
                }
              },
              {
                key: "maybeNoderize",
                value: function(t) {
                  return this.opts.html
                    ? (function(t) {
                        arguments.length > 1 &&
                          void 0 !== arguments[1] &&
                          arguments[1];
                        var e = new DOMParser().parseFromString(t, "text/html"),
                          n = [].slice.call(e.body.querySelectorAll("*"));
                        n.forEach(function(e) {
                          t = t.replace(e.outerHTML, "{%}");
                        });
                        var i = t.split("");
                        return (
                          i.forEach(function(t, e) {
                            if ("{%}" === i.slice(e, e + 3).join("")) {
                              i.splice(e, 3);
                              var r = e,
                                o = n.shift();
                              o.innerHTML.split("").forEach(function(t) {
                                var n = [].slice
                                  .call(o.attributes)
                                  .map(function(t) {
                                    return { name: t.name, value: t.nodeValue };
                                  });
                                i.splice(r, 0, {
                                  tag: o.tagName,
                                  attributes: n,
                                  content: t,
                                  isFirstCharacter: r === e
                                }),
                                  r++;
                              });
                            }
                          }),
                          i
                        );
                      })(t)
                    : t.split("");
                }
              },
              {
                key: "queueString",
                value: function(t) {
                  var e = this,
                    n = (t = this.maybeNoderize(t)).length;
                  t.forEach(function(t, i) {
                    var r = [e.type, t];
                    0 === i && r.push({ isFirst: !0 }),
                      i + 1 === n && r.push({ isLast: !0 }),
                      e.queue.add(r);
                  });
                }
              },
              {
                key: "addSplitPause",
                value: function(t) {
                  var e =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 1;
                  this.queue.waiting.splice(t, 0, [
                    this.pause,
                    this.opts.nextStringDelay.before
                  ]),
                    this.queue.waiting.splice(t + e + 1, 0, [
                      this.pause,
                      this.opts.nextStringDelay.after
                    ]);
                }
              },
              {
                key: "cursor",
                value: function() {
                  if (!this.isInput) {
                    var t = "visibility: hidden;";
                    this.opts.cursor &&
                      (s(
                        "\n        @keyframes blink-"
                          .concat(
                            this.id,
                            " {\n          0% {opacity: 0}\n          49% {opacity: 0}\n          50% {opacity: 1}\n        }\n\n        [data-typeit-id='"
                          )
                          .concat(
                            this.id,
                            "'] .ti-cursor {\n          animation: blink-"
                          )
                          .concat(this.id, " ")
                          .concat(
                            this.opts.cursorSpeed / 1e3,
                            "s infinite;\n        }\n      "
                          ),
                        this.id
                      ),
                      (t = "")),
                      this.$eWrapper.insertAdjacentHTML(
                        "beforeend",
                        '<span style="'
                          .concat(w)
                          .concat(t, 'left: -.25ch;" class="ti-cursor">')
                          .concat(this.opts.cursorChar, "</span>")
                      );
                  }
                }
              },
              {
                key: "insert",
                value: function(t) {
                  var e =
                    arguments.length > 1 &&
                    void 0 !== arguments[1] &&
                    arguments[1];
                  this.isInput
                    ? (this.$e.value = "".concat(this.$e.value).concat(t))
                    : ((e
                        ? this.$eContainer.lastChild
                        : this.$eContainer
                      ).insertAdjacentHTML("beforeend", t),
                      this.contents(
                        this.contents()
                          .split("")
                          .join("")
                      ));
                }
              },
              {
                key: "handleHardCoded",
                value: function(t) {
                  return (
                    !!t.length &&
                    (this.opts.startDelete
                      ? (this.insert(t),
                        this.queue.add([this.delete, !0]),
                        void this.addSplitPause(1))
                      : void (this.opts.strings = v(l(t.trim())).concat(
                          v(this.opts.strings)
                        )))
                  );
                }
              },
              {
                key: "wait",
                value: function(t, e) {
                  this.timeouts.push(setTimeout(t, e));
                }
              },
              {
                key: "pause",
                value: function() {
                  var t = this,
                    e =
                      arguments.length > 0 &&
                      void 0 !== arguments[0] &&
                      arguments[0];
                  return new Promise(function(n, i) {
                    t.wait(function() {
                      return n();
                    }, e || t.opts.nextStringDelay.total);
                  });
                }
              },
              {
                key: "type",
                value: function(t) {
                  var e = this;
                  return new Promise(function(n, i) {
                    e.wait(function() {
                      return "string" == typeof t
                        ? (e.insert(t), n())
                        : t.isFirstCharacter
                        ? (e.insert(
                            c({
                              tag: t.tag,
                              attributes: t.attributes,
                              content: t.content
                            })
                          ),
                          n())
                        : (e.insert(t.content, !0), n());
                    }, e.typePace);
                  });
                }
              },
              {
                key: "setPace",
                value: function() {
                  var t = this.opts.speed,
                    e =
                      null !== this.opts.deleteSpeed
                        ? this.opts.deleteSpeed
                        : this.opts.speed / 3,
                    n = t / 2,
                    i = e / 2;
                  (this.typePace = this.opts.lifeLike ? o(t, n) : t),
                    (this.deletePace = this.opts.lifeLike ? o(e, i) : e);
                }
              },
              {
                key: "empty",
                value: function() {
                  this.contents("");
                }
              },
              {
                key: "delete",
                value: function() {
                  var t = this,
                    e =
                      arguments.length > 0 &&
                      void 0 !== arguments[0] &&
                      arguments[0];
                  return new Promise(function(n, i) {
                    t.wait(function() {
                      var i = t.maybeNoderize(t.contents());
                      return (
                        i.splice(-1, 1),
                        (i = (i = i.map(function(t) {
                          return "object" === y(t)
                            ? c({
                                tag: t.tag,
                                attributes: t.attributes,
                                content: t.content
                              })
                            : t;
                        }))
                          .join("")
                          .replace(/<[^\/>][^>]*><\/[^>]+>/, "")),
                        t.contents(i),
                        e && i.length > 0 && t.delete(!0),
                        n()
                      );
                    }, t.deletePace);
                  });
                }
              }
            ]) && b(e.prototype, n),
            p && b(e, p),
            t
          );
        })(),
        S = function(t) {
          return (
            "string" == typeof t
              ? (t = document.querySelectorAll(t))
              : t instanceof NodeList || (t = [t]),
            [].slice.call(t)
          );
        };
      function q(t, e) {
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, i.key, i);
        }
      }
      n.d(e, "default", function() {
        return x;
      });
      var x = (function() {
        function t(e, n) {
          var i = this;
          !(function(t, e) {
            if (!(t instanceof e))
              throw new TypeError("Cannot call a class as a function");
          })(this, t),
            (this.instances = S(e).map(function(t) {
              return new k({
                element: t,
                id: Math.random()
                  .toString(36)
                  .substring(2, 15),
                options: n,
                typeit: i
              });
            }));
        }
        var e, n, i;
        return (
          (e = t),
          (n = [
            {
              key: "queueUp",
              value: function(t) {
                var e = this,
                  n =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null,
                  i =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 1;
                this.instances.forEach(function(r) {
                  for (
                    var o = "string" != typeof t,
                      s = o ? t : r[t],
                      a = o ? e : n,
                      u = 0;
                    u < i;
                    u++
                  )
                    r.queue.add([s, a]);
                });
              }
            },
            {
              key: "is",
              value: function(t) {
                return (
                  (e = this.instances),
                  (n = t),
                  (i = !0),
                  !!e.length &&
                    e.filter(function(t) {
                      return t.status[n] === i;
                    }).length === e.length
                );
                var e, n, i;
              }
            },
            {
              key: "freeze",
              value: function() {
                this.instances.forEach(function(t) {
                  t.status.frozen = !0;
                });
              }
            },
            {
              key: "unfreeze",
              value: function() {
                this.instances.forEach(function(t) {
                  t.status.frozen && ((t.status.frozen = !1), t.fire());
                });
              }
            },
            {
              key: "type",
              value: function() {
                var t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "";
                return (
                  this.instances.forEach(function(e) {
                    return e.queueString(t);
                  }),
                  this
                );
              }
            },
            {
              key: "delete",
              value: function() {
                var t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : null;
                return (
                  this.queueUp("delete", null === t, null === t ? 1 : t), this
                );
              }
            },
            {
              key: "pause",
              value: function() {
                var t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : null;
                return this.queueUp("pause", t), this;
              }
            },
            {
              key: "break",
              value: function() {
                return this.queueUp("insert", "<br>"), this;
              }
            },
            {
              key: "options",
              value: function(t) {
                return this.queueUp("setOptions", t), this;
              }
            },
            {
              key: "hook",
              value: function(t) {
                return this.queueUp(t), this;
              }
            },
            {
              key: "destroy",
              value: function() {
                var t =
                  !(arguments.length > 0 && void 0 !== arguments[0]) ||
                  arguments[0];
                this.instances.forEach(function(e) {
                  e.timeouts.forEach(function(t) {
                    clearTimeout(t);
                  }),
                    (e.timeouts = []),
                    t &&
                      e.opts.cursor &&
                      e.$eWrapper.removeChild(
                        e.$eWrapper.querySelector(".ti-cursor")
                      ),
                    (e.status.destroyed = !0);
                });
              }
            },
            {
              key: "empty",
              value: function() {
                return this.queueUp("empty"), this;
              }
            },
            {
              key: "reset",
              value: function() {
                return (
                  (this.instances = this.instances.map(function(t) {
                    return t.reset();
                  })),
                  this
                );
              }
            },
            {
              key: "go",
              value: function() {
                return (
                  this.instances.forEach(function(t) {
                    t.init();
                  }),
                  this
                );
              }
            }
          ]) && q(e.prototype, n),
          i && q(e, i),
          t
        );
      })();
    }
  ]).default;
});
